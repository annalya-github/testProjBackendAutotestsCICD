name: CI (backend + api tests)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-run-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # собираем оба образа
      - name: Build images
        run: docker compose -f docker-compose.ci.yml build

      # поднимаем только backend и ждём готовность (дополнительно к healthcheck)
      - name: Up backend and wait for health
        run: |
          set -e
          docker compose -f docker-compose.ci.yml up -d backend
          echo "Waiting for backend to be UP..."
          for i in {1..40}; do
            if curl -fsS http://localhost:8080/actuator/health | grep -q '"status":"UP"'; then
              echo "Backend is UP"; break
            fi
            sleep 2
            if [ $i -eq 40 ]; then echo "Backend did not become healthy"; docker logs $(docker compose -f docker-compose.ci.yml ps -q backend); exit 1; fi
          done

      # запускаем тестовый контейнер (НЕ удаляем сразу, чтобы вытащить отчёты)
      - name: Run API tests container
        id: run_tests
        run: |
          set -e
          # запускаем НЕ rm, чтобы потом docker cp
          docker compose -f docker-compose.ci.yml run --name api-tests-run api-tests || echo "tests_failed" > .tests_failed

      # собираем surefire-reports из контейнера
      - name: Collect test reports
        if: always()
        run: |
          mkdir -p reports
          docker cp api-tests-run:/reports ./reports || true

      - name: Upload test reports artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: reports

      # Показываем логи backend при падении
      - name: Show backend logs on failure
        if: failure()
        run: docker logs $(docker compose -f docker-compose.ci.yml ps -q backend) || true

      # Чистим всё
      - name: Down compose and remove test container
        if: always()
        run: |
          docker rm -f api-tests-run || true
          docker compose -f docker-compose.ci.yml down -v

      # Если были провалы в тестах — фейлим джобу
      - name: Fail if tests failed
        if: always()
        run: |
          if [ -f .tests_failed ]; then
            echo "Some API tests failed"; exit 1
          fi
