package com.ann.testProj.cards;

import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.server.ResponseStatusException;
import jakarta.validation.Valid;

/** 4
 * üß© CardPageController ‚Äî –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–∞–≤–ª—è–µ—Ç HTML-—Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ (UI),
 * –∞ –Ω–µ JSON-–æ—Ç–≤–µ—Ç–∞–º–∏. –û–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —à–∞–±–ª–æ–Ω–∞–º–∏ Thymeleaf, –Ω–∞–ø—Ä–∏–º–µ—Ä:
 *   - templates/cards.html ‚Äî —Å–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫
 *   - templates/card-view.html ‚Äî —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
 *
 * üí° –≠—Ç–æ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å
 * —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:
 *  - –≤–∏–¥–µ—Ç—å —Ç–∞–±–ª–∏—Ü—É –∫–∞—Ä—Ç–æ—á–µ–∫
 *  - –¥–æ–±–∞–≤–ª—è—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É
 *  - –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É
 *  - —É–¥–∞–ª—è—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É
 *
 * üîÑ –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç REST-–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ (CardController), —ç—Ç–æ—Ç –∫–ª–∞—Å—Å –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSON.
 * –û–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–º—è HTML-—à–∞–±–ª–æ–Ω–∞, –∞ Spring –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –≤ –Ω–µ–≥–æ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ `Model`.
 */

@Controller // –ì–æ–≤–æ—Ä–∏–º Spring, —á—Ç–æ —ç—Ç–æ—Ç –∫–ª–∞—Å—Å —É–ø—Ä–∞–≤–ª—è–µ—Ç HTML-—Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ (—á–µ—Ä–µ–∑ —à–∞–±–ª–æ–Ω—ã)
@RequestMapping("/ui") // –ë–∞–∑–æ–≤—ã–π –ø—É—Ç—å: –≤—Å–µ URL –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å /ui
public class CardPageController {

    // –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º –∫–∞—Ä—Ç–æ—á–µ–∫
    private final CardRepository repo;

    // –ß–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Spring "–≤–Ω–µ–¥—Ä—è–µ—Ç" (–∏–Ω–∂–µ–∫—Ç–∏—Ç) CardRepository
    public CardPageController(CardRepository repo) {
        this.repo = repo;
    }

    /**
     * üåç GET /ui  –∏–ª–∏ /ui/
     * –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∫–æ—Ä–Ω—è UI –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–∞—Ä—Ç–æ—á–µ–∫.
     * redirect:/ui/cards ‚Äî —ç—Ç–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (HTTP 302).
     */
    @GetMapping({"", "/"})
    public String root() {
        return "redirect:/ui/cards"; // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–ø–∏—Å–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫
    }

    /**
     * üìã GET /ui/cards
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ –≤—Å–µ–º–∏ –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ –∏ –∫–Ω–æ–ø–∫–æ–π "Add".
     *
     * Model ‚Äî —ç—Ç–æ –æ–±—ä–µ–∫—Ç, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –≤ HTML-—à–∞–±–ª–æ–Ω.
     * –ó–¥–µ—Å—å –º—ã –ø–µ—Ä–µ–¥–∞—ë–º:
     *  - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ (cards)
     *  - –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç Card –¥–ª—è —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è (card)
     *
     * –í–æ–∑–≤—Ä–∞—â–∞–µ–º "cards" ‚Üí Spring –∏—â–µ—Ç —Ñ–∞–π–ª templates/cards.html
     */
    @GetMapping("/cards")
    public String list(Model model) {
        model.addAttribute("cards", repo.findAll()); // –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏
        model.addAttribute("card", new Card());      // –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç –¥–ª—è —Ñ–æ—Ä–º—ã "Add"
        return "cards"; // —à–∞–±–ª–æ–Ω templates/cards.html
    }

    /**
     * ‚ûï POST /ui/cards
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ —á–µ—Ä–µ–∑ HTML-—Ñ–æ—Ä–º—É (–º–æ–¥–∞–ª–∫—É).
     *
     * @ModelAttribute("card") ‚Äî —Å–≤—è–∑—ã–≤–∞–µ—Ç –ø–æ–ª—è —Ñ–æ—Ä–º—ã —Å –æ–±—ä–µ–∫—Ç–æ–º Card.
     * @Valid ‚Äî –≤–∫–ª—é—á–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, @NotBlank).
     * BindingResult ‚Äî —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–∞—Ö (–µ—Å–ª–∏ –ø–æ–ª—è –Ω–µ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É).
     */
    @PostMapping("/cards")
    public String create(@ModelAttribute("card") @Valid Card card,
                         BindingResult binding) {

        // –ï—Å–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞ ‚Äî –æ—Å—Ç–∞—ë–º—Å—è –Ω–∞ —Ç–æ–π –∂–µ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
        if (binding.hasErrors()) {
            return "cards";
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        repo.save(card);

        // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ —Å–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫
        return "redirect:/ui/cards";
    }

    /**
     * üîç GET /ui/cards/{id}
     * –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ –µ—ë id.
     * –ï—Å–ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ ‚Äî –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –æ—à–∏–±–∫–∞ 404 (NOT_FOUND).
     *
     * model.addAttribute("card", c) ‚Äî –ø–µ—Ä–µ–¥–∞—ë—Ç –∫–∞—Ä—Ç–æ—á–∫—É –≤ —à–∞–±–ª–æ–Ω card-view.html
     */
    @GetMapping("/cards/{id}")
    public String view(@PathVariable Long id, Model model) {
        Card c = repo.findById(id).orElseThrow(() ->
                new ResponseStatusException(HttpStatus.NOT_FOUND,
                        "Card %d not found".formatted(id))
        );
        model.addAttribute("card", c);
        return "card-view"; // —à–∞–±–ª–æ–Ω templates/card-view.html
    }

    /**
     * ‚ùå POST /ui/cards/{id}/delete
     * –£–¥–∞–ª—è–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É –ø–æ ID –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞ —Å–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫.
     * –ï—Å–ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å —Ç–∞–∫–∏–º id –Ω–µ—Ç ‚Äî –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É 404.
     */
    @PostMapping("/cards/{id}/delete")
    public String delete(@PathVariable Long id) {
        if (!repo.existsById(id)) {
            throw new ResponseStatusException(HttpStatus.NOT_FOUND,
                    "Card %d not found".formatted(id));
        }
        repo.deleteById(id);
        return "redirect:/ui/cards";
    }
}