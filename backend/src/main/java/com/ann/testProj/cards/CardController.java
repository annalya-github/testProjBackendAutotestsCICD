package com.ann.testProj.cards;

import org.springframework.web.bind.annotation.*;
import java.util.List;

/** 3
 * üß© CardController ‚Äî —ç—Ç–æ REST-–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤.
 *
 * –û–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Postman, –±—Ä–∞—É–∑–µ—Ä, frontend)
 * –∏ –≤—ã–∑—ã–≤–∞–µ—Ç –Ω—É–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (CardRepository),
 * —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å, —Å–æ–∑–¥–∞—Ç—å, –æ–±–Ω–æ–≤–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
 *
 * üí° –ü—Ä–æ—â–µ –≥–æ–≤–æ—Ä—è:
 * –≠—Ç–æ "–æ—Ñ–∏—Ü–∏–∞–Ω—Ç" –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
 * –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Üí –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä ‚Üí —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π ‚Üí –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö ‚Üí –æ–±—Ä–∞—Ç–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
 *
 * üìò –û—Å–Ω–æ–≤–Ω—ã–µ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏:
 * - @RestController ‚Äî –≥–æ–≤–æ—Ä–∏—Ç Spring, —á—Ç–æ —ç—Ç–æ—Ç –∫–ª–∞—Å—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç REST API (–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSON)
 * - @RequestMapping("/cards") ‚Äî –æ–±—â–∏–π –ø—É—Ç—å –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –∫–∞—Ä—Ç–æ—á–∫–∞–º
 * - @GetMapping, @PostMapping, @PutMapping, @DeleteMapping ‚Äî —É–∫–∞–∑—ã–≤–∞—é—Ç —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞ –∏ –º–∞—Ä—à—Ä—É—Ç
 *
 * ‚úÖ –ü—Ä–∏–º–µ—Ä:
 *   GET http://localhost:8080/cards       ‚Üí –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
 *   POST http://localhost:8080/cards      ‚Üí —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–∞—Ä—Ç–æ—á–∫—É
 *   GET http://localhost:8080/cards/1     ‚Üí –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É —Å id=1
 *   PUT http://localhost:8080/cards/1     ‚Üí –æ–±–Ω–æ–≤–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É —Å id=1
 *   DELETE http://localhost:8080/cards/1  ‚Üí —É–¥–∞–ª–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É —Å id=1
 */

@RestController // –£–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –∫–ª–∞—Å—Å –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å REST-–∑–∞–ø—Ä–æ—Å—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å JSON
@RequestMapping("/cards") // –ë–∞–∑–æ–≤—ã–π –ø—É—Ç—å –¥–ª—è –≤—Å–µ—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
public class CardController {

    // –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    private final CardRepository repo;

    // –ß–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Spring "–≤–Ω–µ–¥—Ä—è–µ—Ç" (injection) –Ω—É–∂–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    public CardController(CardRepository repo) {
        this.repo = repo;
    }

    /**
     * üìÑ GET /cards
     * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSON-–º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤ Card.
     */
    @GetMapping
    public List<Card> getAll() {
        return repo.findAll();
    }

    /**
     * ‚ûï POST /cards
     * –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–∞—Ä—Ç–æ—á–∫—É.
     * @RequestBody ‚Äî –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ JSON –∏–∑ –∑–∞–ø—Ä–æ—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ Postman).
     * –ü—Ä–∏–º–µ—Ä —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞:
     * {
     *   "title": "New Task",
     *   "description": "Description text",
     *   "status": "OPEN"
     * }
     * –∏–ª–∏
     * curl -X POST http://localhost:8080/cards \
     *   -H "Content-Type: application/json" \
     *   -d '{"title":"New Card","description":"Created from terminal","status":"OPEN"}'
     */
    @PostMapping
    public Card create(@RequestBody Card card) {
        return repo.save(card); // –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ—ë –æ–±—Ä–∞—Ç–Ω–æ
    }

    /**
     * üîç GET /cards/{id}
     * –ü–æ–ª—É—á–∏—Ç—å –æ–¥–Ω—É –∫–∞—Ä—Ç–æ—á–∫—É –ø–æ –µ—ë ID.
     * @PathVariable Long id ‚Äî –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ {id} –∏–∑ URL –ø–æ–ø–∞–¥—ë—Ç –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä –º–µ—Ç–æ–¥–∞.
     * –ü—Ä–∏–º–µ—Ä: GET /cards/1 ‚Üí id = 1
     */
    @GetMapping("/{id}")
    public Card getOne(@PathVariable Long id) {
        return repo.findById(id).orElseThrow(); // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ ‚Äî –≤—ã–±—Ä–æ—Å–∏—Ç –æ—à–∏–±–∫—É 404
    }

    /**
     * ‚ôªÔ∏è PUT /cards/{id}
     * –û–±–Ω–æ–≤–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID.
     * –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ (JSON) —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ.
     * –ú—ã —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ—Ç –∂–µ id –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É —Å–Ω–æ–≤–∞.
     */
    @PutMapping("/{id}")
    public Card update(@PathVariable Long id, @RequestBody Card updated) {
        updated.setId(id); // –ß—Ç–æ–±—ã —Ç–æ—á–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å, –∞ –Ω–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é
        return repo.save(updated); // –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è
    }

    /**
     * ‚ùå DELETE /cards/{id}
     * –£–¥–∞–ª–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É –ø–æ ID.
     * –ü–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ –∫–∞—Ä—Ç–æ—á–∫–∞ –∏—Å—á–µ–∑–∞–µ—Ç –∏–∑ –±–∞–∑—ã.
     */
    @DeleteMapping("/{id}")
    public void delete(@PathVariable Long id) {
        repo.deleteById(id);
    }
}
